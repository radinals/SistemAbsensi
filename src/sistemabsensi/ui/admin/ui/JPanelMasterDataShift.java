/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package sistemabsensi.ui.admin.ui;

import java.sql.Time;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.Date;
import sistemabsensi.database.Shift;
import sistemabsensi.ui.admin.database.DatabaseAdmin;

/**
 *
 * @author rss
 */
public class JPanelMasterDataShift extends javax.swing.JPanel {

	private DatabaseAdmin db;
	private Shift shiftTerpilih;

	/**
	 * Creates new form JPanelMasterDataShift
	 */
	public JPanelMasterDataShift(DatabaseAdmin db) {
		this.db = db;
		this.shiftTerpilih = null;
		initComponents();
	}

	public void updateData() {
		isiTabelData();
	}

	private void isiTabelData() {

		this.tabelData.setModel(db.getModelDataTabel_Shift());

	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jScrollPane1 = new javax.swing.JScrollPane();
                tabelData = new javax.swing.JTable();
                jLabel2 = new javax.swing.JLabel();
                textFieldDeskripsi = new javax.swing.JTextField();
                jLabel3 = new javax.swing.JLabel();
                jLabel4 = new javax.swing.JLabel();
                btnHapus = new javax.swing.JButton();
                btnTambah = new javax.swing.JButton();
                spinnerMulai = new javax.swing.JSpinner();
                spinnerSelesai = new javax.swing.JSpinner();
                jLabel5 = new javax.swing.JLabel();
                btnEdit = new javax.swing.JButton();

                setMaximumSize(new java.awt.Dimension(991, 599));

                tabelData.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null}
                        },
                        new String [] {
                                "Title 1", "Title 2", "Title 3", "Title 4"
                        }
                ));
                tabelData.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                tabelDataMouseClicked(evt);
                        }
                });
                jScrollPane1.setViewportView(tabelData);

                jLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
                jLabel2.setText("Nama Shift");

                textFieldDeskripsi.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

                jLabel3.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
                jLabel3.setText("SHIFT MULAI");

                jLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
                jLabel4.setText("SHIFT SELESAI");

                btnHapus.setBackground(new java.awt.Color(255, 51, 51));
                btnHapus.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
                btnHapus.setForeground(new java.awt.Color(0, 0, 0));
                btnHapus.setText("HAPUS");
                btnHapus.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnHapusActionPerformed(evt);
                        }
                });

                btnTambah.setBackground(new java.awt.Color(102, 255, 102));
                btnTambah.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
                btnTambah.setForeground(new java.awt.Color(0, 0, 0));
                btnTambah.setText("TAMBAH");
                btnTambah.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnTambahActionPerformed(evt);
                        }
                });

                spinnerMulai.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
                spinnerMulai.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.MINUTE));
                spinnerMulai.setEditor(new javax.swing.JSpinner.DateEditor(spinnerMulai, "HH:mm"));

                spinnerSelesai.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
                spinnerSelesai.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.MINUTE));
                spinnerSelesai.setEditor(new javax.swing.JSpinner.DateEditor(spinnerSelesai, "HH:mm"));

                jLabel5.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
                jLabel5.setText("MAINTENENCE SHIFT");

                btnEdit.setBackground(new java.awt.Color(255, 255, 102));
                btnEdit.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
                btnEdit.setForeground(new java.awt.Color(0, 0, 0));
                btnEdit.setText("EDIT");
                btnEdit.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnEditActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 15, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(btnEdit)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(btnTambah))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel4))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(spinnerSelesai, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(spinnerMulai, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(textFieldDeskripsi, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(42, 42, 42)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(spinnerMulai, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel3)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel2)
                                                .addComponent(textFieldDeskripsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(spinnerSelesai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnHapus)
                                        .addComponent(btnTambah)
                                        .addComponent(btnEdit))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(26, Short.MAX_VALUE))
                );
        }// </editor-fold>//GEN-END:initComponents

	public static Date toDate(LocalTime localTime) {
		// Combine LocalTime with current date
		return Date.from(
			localTime.atDate(LocalDate.now()) // Combine time with today’s date
				.atZone(ZoneId.systemDefault()) // Add system default timezone
				.toInstant() // Convert to Instant
		);
	}

	public static Date toDate(LocalDate localDate) {
		return Date.from(
			localDate.atStartOfDay() // Set time to 00:00
				.atZone(ZoneId.systemDefault()) // Apply system time zone
				.toInstant() // Convert to Instant
		);
	}

	private void getDataTerpilih(int idShift) {

		this.shiftTerpilih = db.getDataShift(idShift);
		Date start = toDate(this.shiftTerpilih.shift_start.toLocalTime());
		Date end = toDate(this.shiftTerpilih.shift_end.toLocalTime());
		this.spinnerMulai.setValue(start);
		this.spinnerSelesai.setValue(end);
		this.textFieldDeskripsi.setText(this.shiftTerpilih.deskripsi);

	}

	private static String formatWaktuDate(Date waktu) {
		SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
		return sdf.format(waktu);
	}

	//NOTES:
	// UNCLEAR LOGIC
	// EDIT HAS ID,
	// ADD IF NO ID, (NEED TO VERIFY)
	// FIXME: NEED TO REVIEW USE CASE!

        private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
		if (this.textFieldDeskripsi.getText().isEmpty()) {
			this.textFieldDeskripsi.requestFocus();
			DialogPesan.tampilPesan("Deskripsi tidak boleh Kosong!");
			return;
		}

		Shift shift = new Shift();
		shift.idShift = null;
		shift.shift_end = Time.valueOf(formatWaktuDate((Date) this.spinnerSelesai.getValue()));
		shift.shift_start = Time.valueOf(formatWaktuDate((Date) this.spinnerMulai.getValue()));
		shift.deskripsi = this.textFieldDeskripsi.getText();

		this.db.simpanDataShift(shift);

		this.updateData();
        }//GEN-LAST:event_btnTambahActionPerformed

        private void tabelDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelDataMouseClicked
		int barisTerpilih = this.tabelData.getSelectedRow();
		Integer id = (Integer) this.tabelData.getModel().getValueAt(barisTerpilih, 0);
		this.getDataTerpilih(id);
        }//GEN-LAST:event_tabelDataMouseClicked

	private boolean isDataTerpilihDiubah() {
		Time shift_end = Time.valueOf(formatWaktuDate((Date) this.spinnerSelesai.getValue()));
		Time shift_start = Time.valueOf(formatWaktuDate((Date) this.spinnerMulai.getValue()));
		String deskripsi = this.textFieldDeskripsi.getText();

		return !(this.shiftTerpilih != null && this.shiftTerpilih.deskripsi.equals(deskripsi) && this.shiftTerpilih.shift_end.equals(shift_end) && this.shiftTerpilih.shift_start.equals(shift_start));
	}

        private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed

		Integer idShift = null;
		if (this.shiftTerpilih != null && !this.isDataTerpilihDiubah()) {
			idShift = this.shiftTerpilih.idShift;
		} else {
			DialogPesan.tampilPesan("Silahkan Pilih terlebih dahulu dari tabel, data yang ingin dihapus!");
			return;
		}

		if (!DialogPesan.tampilKonfirmasi("Konfirmasi Penghapusan", "Apakah anda yakin ingin menghapus data shift: " + this.shiftTerpilih.deskripsi + "?. ")) {
			return;
		}

		this.db.deleteDataShift(idShift);

		this.updateData();
        }//GEN-LAST:event_btnHapusActionPerformed

        private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
		if (this.textFieldDeskripsi.getText().isEmpty()) {
			this.textFieldDeskripsi.requestFocus();
			DialogPesan.tampilPesan("Deskripsi tidak boleh Kosong!");
			return;
		}

		Shift shift = new Shift();
		if (this.shiftTerpilih != null) {
			shift.idShift = this.shiftTerpilih.idShift;
		} else {
			DialogPesan.tampilPesan("Silahkan Pilih terlebih dahulu dari tabel, data yang ingin diedit!");
			return;
		}
		shift.shift_end = Time.valueOf(formatWaktuDate((Date) this.spinnerSelesai.getValue()));
		shift.shift_start = Time.valueOf(formatWaktuDate((Date) this.spinnerMulai.getValue()));
		shift.deskripsi = this.textFieldDeskripsi.getText();

		this.db.simpanDataShift(shift);

		this.updateData();
        }//GEN-LAST:event_btnEditActionPerformed

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnEdit;
        private javax.swing.JButton btnHapus;
        private javax.swing.JButton btnTambah;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JLabel jLabel5;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JSpinner spinnerMulai;
        private javax.swing.JSpinner spinnerSelesai;
        private javax.swing.JTable tabelData;
        private javax.swing.JTextField textFieldDeskripsi;
        // End of variables declaration//GEN-END:variables
}
