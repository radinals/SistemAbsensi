/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package sistemabsensi.admin.ui;

import java.sql.SQLException;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import sistemabsensi.admin.data.DBAbsensi;
import sistemabsensi.admin.data.Shift;

/**
 *
 * @author rss
 */
public class JPanelMasterDataShift extends javax.swing.JPanel {

	private DBAbsensi db;
	private Shift shiftTerpilih;

	/**
	 * Creates new form JPanelMasterDataShift
	 */
	public JPanelMasterDataShift(DBAbsensi db) {
		this.db = db;
		this.shiftTerpilih = null;
		initComponents();
	}

	public void updateData() {
		isiTabelData();
	}

	private void isiTabelData() {
		try {
			this.tabelData.setModel(db.getModelDataTabel_Shift());
		} catch (SQLException e) {
			e.printStackTrace();
			System.exit(-1);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jScrollPane1 = new javax.swing.JScrollPane();
                tabelData = new javax.swing.JTable();
                textFieldID = new javax.swing.JTextField();
                jLabel1 = new javax.swing.JLabel();
                jLabel2 = new javax.swing.JLabel();
                textFieldDeskripsi = new javax.swing.JTextField();
                jLabel3 = new javax.swing.JLabel();
                jLabel4 = new javax.swing.JLabel();
                btnHapus = new javax.swing.JButton();
                btnSimpan = new javax.swing.JButton();
                spinnerMulai = new javax.swing.JSpinner();
                spinnerSelesai = new javax.swing.JSpinner();
                jLabel5 = new javax.swing.JLabel();

                setMaximumSize(new java.awt.Dimension(991, 599));

                tabelData.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null}
                        },
                        new String [] {
                                "Title 1", "Title 2", "Title 3", "Title 4"
                        }
                ));
                tabelData.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                tabelDataMouseClicked(evt);
                        }
                });
                jScrollPane1.setViewportView(tabelData);

                jLabel1.setText("ID");

                jLabel2.setText("DESKRIPSI");

                jLabel3.setText("MULAI");

                jLabel4.setText("SELESAI");

                btnHapus.setText("HAPUS");
                btnHapus.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnHapusActionPerformed(evt);
                        }
                });

                btnSimpan.setText("SIMPAN");
                btnSimpan.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnSimpanActionPerformed(evt);
                        }
                });

                spinnerMulai.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.MINUTE));
                spinnerMulai.setEditor(new javax.swing.JSpinner.DateEditor(spinnerMulai, ""));

                spinnerSelesai.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.MINUTE));
                spinnerSelesai.setEditor(new javax.swing.JSpinner.DateEditor(spinnerSelesai, ""));

                jLabel5.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
                jLabel5.setText("MAINTENENCE SHIFT");

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(textFieldDeskripsi)
                                                        .addComponent(textFieldID)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(spinnerSelesai, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(0, 152, Short.MAX_VALUE)))
                                                .addGap(109, 109, 109))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(spinnerMulai, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(36, 36, 36)
                                                                .addComponent(btnSimpan)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(btnHapus)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(5, 5, 5)
                                                .addComponent(jLabel1)
                                                .addGap(16, 16, 16)
                                                .addComponent(jLabel2)
                                                .addGap(16, 16, 16)
                                                .addComponent(jLabel3))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(textFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(6, 6, 6)
                                                .addComponent(textFieldDeskripsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(spinnerMulai, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(spinnerSelesai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel4))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(btnSimpan)
                                                        .addComponent(btnHapus)))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(125, Short.MAX_VALUE))
                );
        }// </editor-fold>//GEN-END:initComponents

	public static Date toDate(LocalTime localTime) {
		// Combine LocalTime with current date
		return Date.from(
			localTime.atDate(LocalDate.now()) // Combine time with today’s date
				.atZone(ZoneId.systemDefault()) // Add system default timezone
				.toInstant() // Convert to Instant
		);
	}

	public static Date toDate(LocalDate localDate) {
		return Date.from(
			localDate.atStartOfDay() // Set time to 00:00
				.atZone(ZoneId.systemDefault()) // Apply system time zone
				.toInstant() // Convert to Instant
		);
	}

	private void getDataTerpilih(int idShift) {
		try {
			this.shiftTerpilih = db.getDataShift(idShift);
			Date start = toDate(this.shiftTerpilih.shift_start.toLocalTime());
			Date end = toDate(this.shiftTerpilih.shift_end.toLocalTime());
			this.spinnerMulai.setValue(start);
			this.spinnerSelesai.setValue(end);
			this.textFieldDeskripsi.setText(this.shiftTerpilih.deskripsi);
			this.textFieldID.setText(this.shiftTerpilih.idShift.toString());

		} catch (SQLException ex) {
			Logger.getLogger(JPanelMasterDataRecordAbsen.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	private static String formatWaktuDate(Date waktu) {
		SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
		return sdf.format(waktu);
	}

        private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
		if (this.textFieldDeskripsi.getText().isEmpty()) {
			this.textFieldDeskripsi.requestFocus();
			Pesan.tampilkanPeringatan("Deskripsi tidak boleh Home!");
			return;
		}

		Shift shift = new Shift();

		try {
			shift.idShift = Integer.parseInt(this.textFieldID.getText());
		} catch (Exception e) {
			shift.idShift = null;
		}

		shift.shift_end = Time.valueOf(formatWaktuDate((Date) this.spinnerSelesai.getValue()));
		shift.shift_start = Time.valueOf(formatWaktuDate((Date) this.spinnerMulai.getValue()));
		shift.deskripsi = this.textFieldDeskripsi.getText();

		try {
			this.db.simpanDataShift(shift);
		} catch (SQLException e) {
			e.printStackTrace();
			System.exit(-1);
		}
		
		this.updateData();
        }//GEN-LAST:event_btnSimpanActionPerformed

        private void tabelDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelDataMouseClicked
		int barisTerpilih = this.tabelData.getSelectedRow();
		Integer id = (Integer) this.tabelData.getModel().getValueAt(barisTerpilih, 0);
		this.getDataTerpilih(id);
        }//GEN-LAST:event_tabelDataMouseClicked

        private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
		if (this.textFieldID.getText().isEmpty()) {
			this.textFieldID.requestFocus();
			Pesan.tampilkanPeringatan("ID Tidak boleh Home!");
		}
		int idShift = -1;
		try {
			idShift = Integer.parseInt(this.textFieldID.getText());
		} catch (Exception e) {
			this.textFieldID.requestFocus();
			Pesan.tampilkanPeringatan("ID harus berbentuk angka numeric!");
			return;
		}
		
		
		try {
			this.db.deleteDataShift(idShift);
		} catch (SQLException e) {
			e.printStackTrace();
			System.exit(-1);
		}
		
		this.updateData();
        }//GEN-LAST:event_btnHapusActionPerformed

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnHapus;
        private javax.swing.JButton btnSimpan;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JLabel jLabel5;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JSpinner spinnerMulai;
        private javax.swing.JSpinner spinnerSelesai;
        private javax.swing.JTable tabelData;
        private javax.swing.JTextField textFieldDeskripsi;
        private javax.swing.JTextField textFieldID;
        // End of variables declaration//GEN-END:variables
}
