/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package sistemabsensi.admin.ui;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import sistemabsensi.admin.data.DBAbsensi;
import sistemabsensi.admin.data.Prodi;

/**
 *
 * @author rss
 */
public class JPanelMasterDataProdi extends javax.swing.JPanel {

	private DBAbsensi db;

	private Prodi prodiTerpilih;

	/**
	 * Creates new form JPanelMasterDataShift
	 */
	public JPanelMasterDataProdi(DBAbsensi db) {
		this.db = db;
		initComponents();
		this.updateData();
	}

	public void updateData() {
		this.prodiTerpilih = null;
		this.textFieldNamaProdi.setText("");
		this.dapatkanData();
	}

	private void dapatkanData() {
		try {
			this.tabelData.setModel(db.getModelTabel_Prodi());
		} catch (SQLException ex) {
			Logger.getLogger(JPanelMasterDataJabatan.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {
                java.awt.GridBagConstraints gridBagConstraints;

                jScrollPane1 = new javax.swing.JScrollPane();
                tabelData = new javax.swing.JTable();
                textFieldNamaProdi = new javax.swing.JTextField();
                jLabel1 = new javax.swing.JLabel();
                btnHapus = new javax.swing.JButton();
                btnSimpan = new javax.swing.JButton();

                setMaximumSize(new java.awt.Dimension(991, 599));
                setLayout(new java.awt.GridBagLayout());

                tabelData.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null}
                        },
                        new String [] {
                                "Title 1", "Title 2", "Title 3", "Title 4"
                        }
                ));
                tabelData.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                tabelDataMouseClicked(evt);
                        }
                });
                jScrollPane1.setViewportView(tabelData);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 8;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridheight = 10;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.ipadx = 463;
                gridBagConstraints.ipady = 213;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                gridBagConstraints.insets = new java.awt.Insets(109, 34, 251, 68);
                add(jScrollPane1, gridBagConstraints);

                textFieldNamaProdi.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                textFieldNamaProdiActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 5;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridwidth = 3;
                gridBagConstraints.gridheight = 2;
                gridBagConstraints.ipadx = 147;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(109, 6, 0, 0);
                add(textFieldNamaProdi, gridBagConstraints);

                jLabel1.setText("NAMA PRODI");
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(114, 36, 0, 0);
                add(jLabel1, gridBagConstraints);

                btnHapus.setText("HAPUS");
                btnHapus.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnHapusActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 6;
                gridBagConstraints.gridy = 8;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(51, 6, 0, 0);
                add(btnHapus, gridBagConstraints);

                btnSimpan.setText("SIMPAN");
                btnSimpan.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnSimpanActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 8;
                gridBagConstraints.gridwidth = 4;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(51, 101, 0, 0);
                add(btnSimpan, gridBagConstraints);
        }// </editor-fold>//GEN-END:initComponents

        private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
		if (this.textFieldNamaProdi.getText().isEmpty()) {
			this.textFieldNamaProdi.requestFocus();
			Pesan.tampilkanPeringatan("Pastikan Field Nama Prodi Terisi!.");
			return;
		}

		String namaProdi = this.textFieldNamaProdi.getText();

		Prodi prodi = null;
		if ((this.prodiTerpilih != null && namaProdi.equals(this.prodiTerpilih.namaProdi)) || (this.prodiTerpilih == null && this.db.isDataProdiAda(namaProdi))) {
			Pesan.tampilkanPeringatan("Tidak ada nilai yang baru atau diubah!.");
			return;
		} else if (this.prodiTerpilih != null && !namaProdi.equals(this.prodiTerpilih.namaProdi)) {
			prodi = new Prodi(this.prodiTerpilih.id, namaProdi);
		} else {
			prodi = new Prodi(null, namaProdi);
		}
		try {

			this.db.simpanDataProdi(prodi);
		} catch (SQLException ex) {
			Logger.getLogger(JPanelMasterDataProdi.class.getName()).log(Level.SEVERE, null, ex);
		}

		this.updateData();

        }//GEN-LAST:event_btnSimpanActionPerformed

        private void textFieldNamaProdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldNamaProdiActionPerformed
		// TODO add your handling code here:
        }//GEN-LAST:event_textFieldNamaProdiActionPerformed

        private void tabelDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelDataMouseClicked
		int barisTerpilih = this.tabelData.getSelectedRow();
		String namaProdi = (String) this.tabelData.getModel().getValueAt(barisTerpilih, 1);
		int idProdi = Integer.valueOf((String) this.tabelData.getModel().getValueAt(barisTerpilih, 0));

		this.prodiTerpilih = new Prodi(idProdi, namaProdi);

		this.textFieldNamaProdi.setText(namaProdi);
        }//GEN-LAST:event_tabelDataMouseClicked

        private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
		if (this.textFieldNamaProdi.getText().isEmpty()) {
			this.textFieldNamaProdi.requestFocus();
			Pesan.tampilkanPeringatan("Pastikan Field Nama Prodi Terisi!.");
			return;
		}

		String namaProdi = this.textFieldNamaProdi.getText();

		Prodi prodi = null;
		if (this.prodiTerpilih != null && namaProdi.equals(this.prodiTerpilih.namaProdi)) {
			prodi = this.prodiTerpilih;
		} else if (this.prodiTerpilih != null && !namaProdi.equals(this.prodiTerpilih.namaProdi)) {
			prodi = new Prodi(this.prodiTerpilih.id, namaProdi);
		} else if (this.db.isDataProdiAda(namaProdi)) {
			try {
				prodi = this.db.getDataProdi(namaProdi);
			} catch (SQLException ex) {
				Logger.getLogger(JPanelMasterDataProdi.class.getName()).log(Level.SEVERE, null, ex);
			}
		} else {
			prodi = new Prodi(null, namaProdi);
		}

		if (!Pesan.tampilkanKonfirmasi("Konfirmasi Penghapusan", "Apakah anda yakin ingin menghapus data prodi: " + namaProdi + "?. ")) {
			return;
		}

		try {
			this.db.deleteDataProdi(prodi.id);
		} catch (SQLException ex) {
			Logger.getLogger(JPanelMasterDataProdi.class.getName()).log(Level.SEVERE, null, ex);
		}

		this.updateData();

        }//GEN-LAST:event_btnHapusActionPerformed

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnHapus;
        private javax.swing.JButton btnSimpan;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JTable tabelData;
        private javax.swing.JTextField textFieldNamaProdi;
        // End of variables declaration//GEN-END:variables
}
